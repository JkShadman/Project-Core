Fantasy Premier League Clone

A complete Fantasy Premier League (FPL) clone built with Laravel, implementing the MVC architecture with MySQL database.

## 🚀 Features

### Core Functionality
- **Player Management**: View all Premier League players with detailed statistics
- **Team Creation**: Build your fantasy team with 15 players (11 starters + 4 bench)
- **Transfer System**: Make weekly transfers with cost management
- **Captain Selection**: Set captain and vice-captain for double points
- **Point Calculation**: Automated point calculation based on real FPL rules
- **Leaderboard**: Global ranking system for all users
- **Gameweek Management**: Weekly deadlines and locking system

### FPL Rules Implemented
- ✅ 3 players maximum from the same club
- ✅ Position limits: 2 GKs, 5 DEFs, 5 MIDs, 3 FWDs
- ✅ Captain/Vice-captain system with double points
- ✅ Transfer costs and free transfer system
- ✅ Defensive contributions points (every 5 = 1 point)
- ✅ Injury status system (Red/Orange/Yellow warnings)
- ✅ Bonus points system for top performers
- ✅ Budget management (£100.0 starting budget)

### Admin Features
- Player price updates
- Performance stat management
- Gameweek control

## 🛠️ Tech Stack

- **Backend**: Laravel 10.x (PHP)
- **Frontend**: Blade templating, Bootstrap 5, jQuery
- **Database**: MySQL
- **Server**: Apache with PHP 8.x
- **Architecture**: MVC Pattern

## 📦 Installation

1. **Clone the repository**
   ```bash
   git clone <repository-url>
   cd premier-league-fantasy-laravel
   ```

2. **Install dependencies**
   ```bash
   composer install
   npm install
   ```

3. **Environment setup**
   ```bash
   cp .env.example .env
   php artisan key:generate
   ```

4. **Database configuration**
   - Create MySQL database
   - Update `.env` with database credentials
   ```env
   DB_DATABASE=fantasy_premier_league
   DB_USERNAME=root
   DB_PASSWORD=
   ```

5. **Run migrations and seeders**
   ```bash
   php artisan migrate
   php artisan db:seed
   ```

6. **Start development server**
   ```bash
   php artisan serve
   ```

## 🗂️ Project Structure

```
premier-league-fantasy-laravel/
├── app/
│   ├── Models/
│   │   ├── Player.php
│   │   ├── User.php
│   │   ├── Gameweek.php
│   │   ├── PlayerPerformance.php
│   │   ├── UserTransfer.php
│   │   └── UserGameweekPoints.php
│   ├── Http/
│   │   └── Controllers/
│   │       ├── PlayerController.php
│   │       └── TeamController.php
│   └── ...
├── database/
│   ├── migrations/
│   │   ├── create_players_table.php
│   │   ├── create_users_table.php
│   │   ├── create_user_players_table.php
│   │   ├── create_gameweeks_table.php
│   │   ├── create_player_performances_table.php
│   │   ├── create_user_transfers_table.php
│   │   └── create_user_gameweek_points_table.php
│   └── seeders/
│       ├── DatabaseSeeder.php
│       └── PlayersTableSeeder.php
├── resources/
│   └── views/
│       ├── layouts/
│       │   └── app.blade.php
│       ├── players/
│       │   └── index.blade.php
│       └── team/
│           └── team_index.blade.php
├── routes/
│   └── web.php
└── ...
```

## 🎮 Usage

1. **Register/Login**: Create an account or login
2. **Build Team**: Select 15 players within budget constraints
3. **Set Captain**: Choose captain and vice-captain
4. **Make Transfers**: Use free transfers or paid transfers
5. **View Leaderboard**: Check your ranking against other users
6. **Monitor Performance**: Track player and team performance weekly

## 📊 Database Schema

### Key Tables
- `players`: Premier League player data
- `users`: Fantasy team managers
- `user_players`: Many-to-many relationship between users and players
- `gameweeks`: Weekly game information
- `player_performances`: Weekly performance statistics
- `user_transfers`: Transfer history
- `user_gameweek_points`: Weekly points tracking

## 🎯 FPL Point System

### Scoring Rules
- **Playing Time**: 1 point for playing, 2 points for 60+ minutes
- **Goals**: 4-6 points based on position
- **Assists**: 3 points
- **Clean Sheets**: 1-4 points based on position
- **Saves**: 1 point per 3 saves (GK only)
- **Defensive Contributions**: 1 point per 5 contributions (DEF only)
- **Cards**: -1 for yellow, -3 for red
- **Penalties**: -2 for missed, +5 for saved
- **Bonus Points**: Additional points for top performers

## 🔧 Configuration

### Environment Variables
```env
APP_NAME="Fantasy Premier League Clone"
APP_ENV=local
APP_KEY=
APP_DEBUG=true
APP_URL=http://localhost:8000

DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=fantasy_premier_league
DB_USERNAME=root
DB_PASSWORD=
```

## 🤝 Contributing

1. Fork the project
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## 📝 License

This project is for educational purposes. Premier League and FPL are trademarks of their respective owners.

## 🎉 Acknowledgments

- Fantasy Premier League for the rules and inspiration
- Laravel community for excellent documentation
- Bootstrap for UI components

## 📞 Support

For support and questions, please create an issue in the GitHub repository.

---

**Note**: This is a clone project for educational purposes. All player data and rules are based on the official Fantasy Premier League game.
